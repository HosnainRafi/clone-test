# version: '3.8'

services:
  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: mbstu-nginx
    restart: unless-stopped
    ports:
      - "6001:80"
      - "6002:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./storage/logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - mbstu-network

  # PHP-FPM Application
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: production
    container_name: mbstu-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost:6001
      - CONTAINER_ROLE=app
    depends_on:
      - db
      - redis
    networks:
      - mbstu-network

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: production
    container_name: mbstu-queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost:6001
      - CONTAINER_ROLE=queue
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    depends_on:
      - db
      - redis
    networks:
      - mbstu-network

  # Scheduler (Cron)
  scheduler:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: production
    container_name: mbstu-scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost:6001
      - CONTAINER_ROLE=scheduler
    command: >
      sh -c "while true; do
        php artisan schedule:run --verbose --no-interaction &
        sleep 60
      done"
    depends_on:
      - db
      - redis
    networks:
      - mbstu-network

  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: mbstu-db
    restart: unless-stopped
    ports:
      - "6003:5432"
    environment:
      POSTGRES_DB: mbstu_db
      POSTGRES_USER: mbstu_user
      POSTGRES_PASSWORD: mbstu_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mbstu-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mbstu_user -d mbstu_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: mbstu-redis
    restart: unless-stopped
    ports:
      - "6004:6379"
    volumes:
      - redis-data:/data
    networks:
      - mbstu-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

networks:
  mbstu-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
